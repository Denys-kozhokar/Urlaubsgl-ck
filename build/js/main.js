function getXmlHttp(){var e;try{e=new ActiveXObject("Msxml2.XMLHTTP")}catch(t){try{e=new ActiveXObject("Microsoft.XMLHTTP")}catch(t){e=!1}}return e||"undefined"==typeof XMLHttpRequest||(e=new XMLHttpRequest),e}function getPictures(e){var t=getXmlHttp(),r="3545825-c60bc71ac0a2a71abd3e36913",n="https://pixabay.com/api/?key="+r+"&per_page=7";e&&(n+="&q="+e),t.open("GET",n,!0),t.onreadystatechange=function(){if(4==t.readyState&&t.status>=200&&this.status<400){var e=JSON.parse(t.responseText);console.log(e);for(var r=document.querySelectorAll(".grid__item"),n=0,a=r.length;n<a;n++){var i=e.hits[n].webformatURL,o='<p class="grid__title">'+e.hits[n].tags+"</p>",c='url("'+i+'")';r[n].innerHTML=o,r[n].style.backgroundImage=c}masonry()}},t.send(null)}function masonry(){var e,t=document.querySelector(".grid");e=new Masonry(t,{columnWidth:".grid__sizer",gutter:".grid__gutter",itemSelector:".grid__item",percentPosition:!0})}function searchPictures(e){var t=document.querySelector(".discover__input");getPictures(t.value),t.value="",e.preventDefault?e.preventDefault():e.returnValue=!1}function initSlider(){for(var e=document.querySelectorAll(".carousel__arrow--left"),t=document.querySelectorAll(".carousel__arrow--right"),r=0;r<e.length;r++)e[r].onclick=slider.left;for(var r=0;r<t.length;r++)t[r].onclick=slider.right}!function(e){var t,r=function(e){a=!1,r.isReady=!1,"function"==typeof e&&(i=e),c()},n=e.document,a=!1,i=function(){};r.isReady=!1;var o=function(){if(!r.isReady){if(!n.body)return void setTimeout(o,13);r.isReady=!0,i()}},c=function(){if(!a)if(a=!0,"complete"===n.readyState&&o(),n.addEventListener)n.addEventListener("DOMContentLoaded",t,!1),e.addEventListener("load",t,!1);else if(n.attachEvent){n.attachEvent("onreadystatechange",t),e.attachEvent("onload",t);var r=!1;try{r=null==e.frameElement}catch(e){}n.documentElement.doScroll&&r&&s()}},s=function(){if(!r.isReady){try{n.documentElement.doScroll("left")}catch(e){return void setTimeout(s,1)}o()}};n.addEventListener?t=function(){n.removeEventListener("DOMContentLoaded",t,!1),o()}:n.attachEvent&&(t=function(){"complete"===n.readyState&&(n.detachEvent("onreadystatechange",t),o())}),e.$=r}(window);var slider={left:function(){var e=this.parentElement.querySelector(".carousel__holder"),t=parseInt(getComputedStyle(e).marginLeft),r=parseInt(getComputedStyle(e).width),n=Math.round(Math.abs(t/r*10));switch(n){case 0:e.style.marginLeft="-200%";break;case 3:e.style.marginLeft="0%";break;case 7:e.style.marginLeft="-100%"}},right:function(){var e=this.parentElement.querySelector(".carousel__holder"),t=parseInt(getComputedStyle(e).marginLeft),r=parseInt(getComputedStyle(e).width),n=Math.round(Math.abs(t/r*10));switch(n){case 0:e.style.marginLeft="-100%";break;case 3:e.style.marginLeft="-200%";break;case 7:e.style.marginLeft="0"}}};$(function(){getPictures();initSlider();var e=document.querySelector(".discover__button");e.onclick=searchPictures});
//# sourceMappingURL=data:application/json;base64,
