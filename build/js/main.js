function getXmlHttp(){var e;try{e=new ActiveXObject("Msxml2.XMLHTTP")}catch(t){try{e=new ActiveXObject("Microsoft.XMLHTTP")}catch(t){e=!1}}return e||"undefined"==typeof XMLHttpRequest||(e=new XMLHttpRequest),e}function getPictures(e){var t=getXmlHttp(),n="3545825-c60bc71ac0a2a71abd3e36913",r="https://pixabay.com/api/?key="+n+"&per_page=7";e&&(r+="&q="+e),t.open("GET",r,!0),t.onreadystatechange=function(){if(4==t.readyState&&200==t.status){var e=JSON.parse(t.responseText);console.log(e);for(var n=document.querySelectorAll(".grid__item"),r=0,a=n.length;r<a;r++){var o=e.hits[r].webformatURL,c='<p class="grid__title">'+e.hits[r].tags+"</p>",i='url("'+o+'")';n[r].innerHTML=c,n[r].style.backgroundImage=i}masonry()}},t.send(null)}function masonry(){var e,t=document.querySelector(".grid");e=new Masonry(t,{columnWidth:".grid__sizer",gutter:".grid__gutter",itemSelector:".grid__item",percentPosition:!0})}function searchPictures(e){var t=document.querySelector(".discover__input");getPictures(t.value),t.value="",e.preventDefault?e.preventDefault():e.returnValue=!1}!function(e){var t,n=function(e){a=!1,n.isReady=!1,"function"==typeof e&&(o=e),i()},r=e.document,a=!1,o=function(){};n.isReady=!1;var c=function(){if(!n.isReady){if(!r.body)return void setTimeout(c,13);n.isReady=!0,o()}},i=function(){if(!a)if(a=!0,"complete"===r.readyState&&c(),r.addEventListener)r.addEventListener("DOMContentLoaded",t,!1),e.addEventListener("load",t,!1);else if(r.attachEvent){r.attachEvent("onreadystatechange",t),e.attachEvent("onload",t);var n=!1;try{n=null==e.frameElement}catch(e){}r.documentElement.doScroll&&n&&d()}},d=function(){if(!n.isReady){try{r.documentElement.doScroll("left")}catch(e){return void setTimeout(d,1)}c()}};r.addEventListener?t=function(){r.removeEventListener("DOMContentLoaded",t,!1),c()}:r.attachEvent&&(t=function(){"complete"===r.readyState&&(r.detachEvent("onreadystatechange",t),c())}),e.$=n}(window),function(){var e={left:function(){var e=this.parentElement.querySelector(".carousel__holder"),t=parseInt(getComputedStyle(e).marginLeft),n=parseInt(getComputedStyle(e).width),r=Math.round(Math.abs(t/n*10));switch(r){case 0:e.style.marginLeft="-200%";break;case 3:e.style.marginLeft="0%";break;case 7:e.style.marginLeft="-100%"}},right:function(){var e=this.parentElement.querySelector(".carousel__holder"),t=parseInt(getComputedStyle(e).marginLeft),n=parseInt(getComputedStyle(e).width),r=Math.round(Math.abs(t/n*10));switch(r){case 0:e.style.marginLeft="-100%";break;case 3:e.style.marginLeft="-200%";break;case 7:e.style.marginLeft="0"}}};document.addEventListener("DOMContentLoaded",function(){function t(){for(var t=document.querySelectorAll(".carousel__arrow--left"),n=document.querySelectorAll(".carousel__arrow--right"),r=0;r<t.length;r++)t[r].addEventListener("click",e.left);for(var r=0;r<n.length;r++)n[r].addEventListener("click",e.right)}t()})}(),document.addEventListener("DOMContentLoaded",function(){var e=(getPictures(),document.querySelector(".discover__button"));e.addEventListener("click",searchPictures)});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiZ2V0WG1sSHR0cCIsInhtbGh0dHAiLCJBY3RpdmVYT2JqZWN0IiwiZSIsIkUiLCJYTUxIdHRwUmVxdWVzdCIsImdldFBpY3R1cmVzIiwid29yZCIsImtleSIsInVybCIsIm9wZW4iLCJvbnJlYWR5c3RhdGVjaGFuZ2UiLCJyZWFkeVN0YXRlIiwic3RhdHVzIiwicGljdHVyZXMiLCJKU09OIiwicGFyc2UiLCJyZXNwb25zZVRleHQiLCJjb25zb2xlIiwibG9nIiwiZ3JpZEl0ZW1zIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwiaSIsImxlbmd0aCIsInNyYyIsImhpdHMiLCJ3ZWJmb3JtYXRVUkwiLCJ0YWdzIiwiaW1nIiwiaW5uZXJIVE1MIiwic3R5bGUiLCJiYWNrZ3JvdW5kSW1hZ2UiLCJtYXNvbnJ5Iiwic2VuZCIsIm1zbnJ5IiwiY29udGFpbmVyIiwicXVlcnlTZWxlY3RvciIsIk1hc29ucnkiLCJjb2x1bW5XaWR0aCIsImd1dHRlciIsIml0ZW1TZWxlY3RvciIsInBlcmNlbnRQb3NpdGlvbiIsInNlYXJjaFBpY3R1cmVzIiwiZXZlbnQiLCJyZXF1ZXN0IiwidmFsdWUiLCJwcmV2ZW50RGVmYXVsdCIsInJldHVyblZhbHVlIiwid2luZG93IiwiRE9NQ29udGVudExvYWRlZCIsIiQiLCJjYWxsYmFjayIsInJlYWR5Qm91bmQiLCJpc1JlYWR5IiwiRE9NUmVhZHlDYWxsYmFjayIsImJpbmRSZWFkeSIsIkRPTVJlYWR5IiwiYm9keSIsInNldFRpbWVvdXQiLCJhZGRFdmVudExpc3RlbmVyIiwiYXR0YWNoRXZlbnQiLCJ0b3BsZXZlbCIsImZyYW1lRWxlbWVudCIsImRvY3VtZW50RWxlbWVudCIsImRvU2Nyb2xsIiwiZG9TY3JvbGxDaGVjayIsImVycm9yIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImRldGFjaEV2ZW50Iiwic2xpZGVyIiwibGVmdCIsImhvbGRlciIsInRoaXMiLCJwYXJlbnRFbGVtZW50IiwiY3VycmVudE1hcmdpbiIsInBhcnNlSW50IiwiZ2V0Q29tcHV0ZWRTdHlsZSIsIm1hcmdpbkxlZnQiLCJjdXJyZW50V2lkdGgiLCJ3aWR0aCIsInBlcmNlbnQiLCJNYXRoIiwicm91bmQiLCJhYnMiLCJyaWdodCIsImluaXRTbGlkZXIiLCJhcnJvd0xlZnQiLCJhcnJvd1JpZ2h0IiwiZGlzY292ZXJCdG4iXSwibWFwcGluZ3MiOiJBQXFMQSxRQUFTQSxjQUNQLEdBQUlDLEVBQ0osS0FDRUEsRUFBVSxHQUFJQyxlQUFjLGtCQUM1QixNQUFPQyxHQUNQLElBQ0VGLEVBQVUsR0FBSUMsZUFBYyxxQkFDNUIsTUFBT0UsR0FDUEgsR0FBVSxHQU1kLE1BSEtBLElBQWtDLG1CQUFoQkksa0JBQ3JCSixFQUFVLEdBQUlJLGlCQUVUSixFQUlULFFBQVNLLGFBQVlDLEdBQ3BCLEdBQUlOLEdBQVVELGFBQ1ZRLEVBQU0sb0NBQ05DLEVBQU0sZ0NBQWtDRCxFQUFNLGFBRS9DRCxLQUNGRSxHQUFPLE1BQVFGLEdBR2hCTixFQUFRUyxLQUFLLE1BQU9ELEdBQUssR0FDekJSLEVBQVFVLG1CQUFxQixXQUMxQixHQUEwQixHQUF0QlYsRUFBUVcsWUFDVyxLQUFsQlgsRUFBUVksT0FBZSxDQUN0QixHQUFJQyxHQUFXQyxLQUFLQyxNQUFNZixFQUFRZ0IsYUFDeENDLFNBQVFDLElBQUlMLEVBR1osS0FBSyxHQUZETSxHQUFZQyxTQUFTQyxpQkFBaUIsZUFFakNDLEVBQUksRUFBR0MsRUFBU0osRUFBVUksT0FBUUQsRUFBSUMsRUFBUUQsSUFBSSxDQUMxRCxHQUFJRSxHQUFNWCxFQUFTWSxLQUFLSCxHQUFHSSxhQUN2QnBCLEVBQU8sMEJBQTRCTyxFQUFTWSxLQUFLSCxHQUFHSyxLQUFPLE9BQzNEQyxFQUFNLFFBQVVKLEVBQU0sSUFDMUJMLEdBQVVHLEdBQUdPLFVBQVl2QixFQUN6QmEsRUFBVUcsR0FBR1EsTUFBTUMsZ0JBQWtCSCxFQUd0Q0ksWUFJSGhDLEVBQVFpQyxLQUFLLE1BR2QsUUFBU0QsV0FDUixHQUNJRSxHQURB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QUFpQiwyQkFFbENDLEVBQUUsRUFBRUEsRUFBRWdFLEVBQVUvRCxPQUFPRCxJQUN4QmdFLEVBQVVoRSxHQUFHcUMsaUJBQWlCLFFBQVNVLEVBQU9DLEtBR3RELEtBQUssR0FBSWhELEdBQUUsRUFBRUEsRUFBRWlFLEVBQVdoRSxPQUFPRCxJQUN6QmlFLEVBQVdqRSxHQUFHcUMsaUJBQWlCLFFBQVNVLEVBQU9lLE9BWHpEQyxTQThGSmpFLFNBQVN1QyxpQkFBaUIsbUJBQW9CLFdBRTdDLEdBR0k2QixJQUhXbkYsY0FHR2UsU0FBU2dCLGNBQWMscUJBQ3pDb0QsR0FBWTdCLGlCQUFpQixRQUFTakIiLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gIGpRdWVyeSdzIGRvY3VtZW50LnJlYWR5LyQoZnVuY3Rpb24oKXt9KSBzaG91bGRcbiAgeW91IHdpc2ggdG8gdXNlIGEgY3Jvc3MtYnJvd3NlciBET01SZWFkeSBzb2x1dGlvbiBcbiAgd2l0aG91dCBvcHRpbmcgZm9yIGEgbGlicmFyeS5cbiAgRGVtbzogaHR0cDovL2pzZmlkZGxlLm5ldC85Q1d0ei9cbiAgdXNhZ2U6XG4gICQoZnVuY3Rpb24oKXtcbiAgICAgLy8geW91ciBjb2RlXG4gIH0pO1xuICBQYXJ0czogalF1ZXJ5IHByb2plY3QsIERpZWdvIFBlcmluaSwgTHVjZW50IE0uXG4gIFRoaXMgdmVyc2lvbjogQWRkeSBPc21hbmlcbiovXG4oZnVuY3Rpb24gKHdpbmRvdykge1xuICAvLyBEZWZpbmUgYSBsb2NhbCBjb3B5IG9mICRcbiAgdmFyICQgPSBmdW5jdGlvbiAoY2FsbGJhY2spIHtcbiAgICAgIHJlYWR5Qm91bmQgPSBmYWxzZTtcbiAgICAgICQuaXNSZWFkeSA9IGZhbHNlO1xuICAgICAgaWYgKHR5cGVvZiBjYWxsYmFjayA9PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIERPTVJlYWR5Q2FsbGJhY2sgPSBjYWxsYmFjaztcbiAgICAgIH1cbiAgICAgIGJpbmRSZWFkeSgpO1xuICAgIH0sXG4gICAgLy8gVXNlIHRoZSBjb3JyZWN0IGRvY3VtZW50IGFjY29yZGluZ2x5IHdpdGggd2luZG93IGFyZ3VtZW50IChzYW5kYm94KVxuICAgIGRvY3VtZW50ID0gd2luZG93LmRvY3VtZW50LFxuICAgIHJlYWR5Qm91bmQgPSBmYWxzZSxcbiAgICBET01SZWFkeUNhbGxiYWNrID0gZnVuY3Rpb24gKCkge30sXG4gICAgLy8gVGhlIHJlYWR5IGV2ZW50IGhhbmRsZXJcbiAgICBET01Db250ZW50TG9hZGVkO1xuICAvLyBJcyB0aGUgRE9NIHJlYWR5IHRvIGJlIHVzZWQ/IFNldCB0byB0cnVlIG9uY2UgaXQgb2NjdXJzLlxuICAkLmlzUmVhZHkgPSBmYWxzZTtcbiAgLy8gSGFuZGxlIHdoZW4gdGhlIERPTSBpcyByZWFkeVxuICB2YXIgRE9NUmVhZHkgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAvLyBNYWtlIHN1cmUgdGhhdCB0aGUgRE9NIGlzIG5vdCBhbHJlYWR5IGxvYWRlZFxuICAgICAgaWYgKCEkLmlzUmVhZHkpIHtcbiAgICAgICAgLy8gTWFrZSBzdXJlIGJvZHkgZXhpc3RzLCBhdCBsZWFzdCwgaW4gY2FzZSBJRSBnZXRzIGEgbGl0dGxlIG92ZXJ6ZWFsb3VzICh0aWNrZXQgIzU0NDMpLlxuICAgICAgICBpZiAoIWRvY3VtZW50LmJvZHkpIHtcbiAgICAgICAgICBzZXRUaW1lb3V0KERPTVJlYWR5LCAxMyk7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIC8vIFJlbWVtYmVyIHRoYXQgdGhlIERPTSBpcyByZWFkeVxuICAgICAgICAkLmlzUmVhZHkgPSB0cnVlO1xuICAgICAgICAvLyBJZiB0aGVyZSBhcmUgZnVuY3Rpb25zIGJvdW5kLCB0byBleGVjdXRlXG4gICAgICAgIERPTVJlYWR5Q2FsbGJhY2soKTtcbiAgICAgICAgLy8gRXhlY3V0ZSBhbGwgb2YgdGhlbVxuICAgICAgfVxuICAgIH0gLy8gL3JlYWR5KClcbiAgdmFyIGJpbmRSZWFkeSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChyZWFkeUJvdW5kKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIHJlYWR5Qm91bmQgPSB0cnVlO1xuICAgICAgLy8gQ2F0Y2ggY2FzZXMgd2hlcmUgJCBpcyBjYWxsZWQgYWZ0ZXIgdGhlXG4gICAgICAvLyBicm93c2VyIGV2ZW50IGhhcyBhbHJlYWR5IG9jY3VycmVkLlxuICAgICAgaWYgKGRvY3VtZW50LnJlYWR5U3RhdGUgPT09IFwiY29tcGxldGVcIikge1xuICAgICAgICBET01SZWFkeSgpO1xuICAgICAgfVxuICAgICAgLy8gTW96aWxsYSwgT3BlcmEgYW5kIHdlYmtpdCBuaWdodGxpZXMgY3VycmVudGx5IHN1cHBvcnQgdGhpcyBldmVudFxuICAgICAgaWYgKGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIpIHtcbiAgICAgICAgLy8gVXNlIHRoZSBoYW5keSBldmVudCBjYWxsYmFja1xuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLCBET01Db250ZW50TG9hZGVkLCBmYWxzZSk7XG4gICAgICAgIC8vIEEgZmFsbGJhY2sgdG8gd2luZG93Lm9ubG9hZCwgdGhhdCB3aWxsIGFsd2F5cyB3b3JrXG4gICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwibG9hZFwiLCBET01Db250ZW50TG9hZGVkLCBmYWxzZSk7XG4gICAgICAgIC8vIElmIElFIGV2ZW50IG1vZGVsIGlzIHVzZWRcbiAgICAgIH0gZWxzZSBpZiAoZG9jdW1lbnQuYXR0YWNoRXZlbnQpIHtcbiAgICAgICAgLy8gZW5zdXJlIGZpcmluZyBiZWZvcmUgb25sb2FkLFxuICAgICAgICAvLyBtYXliZSBsYXRlIGJ1dCBzYWZlIGFsc28gZm9yIGlmcmFtZXNcbiAgICAgICAgZG9jdW1lbnQuYXR0YWNoRXZlbnQoXCJvbnJlYWR5c3RhdGVjaGFuZ2VcIiwgRE9NQ29udGVudExvYWRlZCk7XG4gICAgICAgIC8vIEEgZmFsbGJhY2sgdG8gd2luZG93Lm9ubG9hZCwgdGhhdCB3aWxsIGFsd2F5cyB3b3JrXG4gICAgICAgIHdpbmRvdy5hdHRhY2hFdmVudChcIm9ubG9hZFwiLCBET01Db250ZW50TG9hZGVkKTtcbiAgICAgICAgLy8gSWYgSUUgYW5kIG5vdCBhIGZyYW1lXG4gICAgICAgIC8vIGNvbnRpbnVhbGx5IGNoZWNrIHRvIHNlZSBpZiB0aGUgZG9jdW1lbnQgaXMgcmVhZHlcbiAgICAgICAgdmFyIHRvcGxldmVsID0gZmFsc2U7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgdG9wbGV2ZWwgPSB3aW5kb3cuZnJhbWVFbGVtZW50ID09IG51bGw7XG4gICAgICAgIH0gY2F0Y2ggKGUpIHt9XG4gICAgICAgIGlmIChkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuZG9TY3JvbGwgJiYgdG9wbGV2ZWwpIHtcbiAgICAgICAgICBkb1Njcm9sbENoZWNrKCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9OyAvLyAvYmluZFJlYWR5KClcbiAgLy8gVGhlIERPTSByZWFkeSBjaGVjayBmb3IgSW50ZXJuZXQgRXhwbG9yZXJcbiAgdmFyIGRvU2Nyb2xsQ2hlY2sgPSBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAoJC5pc1JlYWR5KSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIElmIElFIGlzIHVzZWQsIHVzZSB0aGUgdHJpY2sgYnkgRGllZ28gUGVyaW5pXG4gICAgICAgIC8vIGh0dHA6Ly9qYXZhc2NyaXB0Lm53Ym94LmNvbS9JRUNvbnRlbnRMb2FkZWQvXG4gICAgICAgIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5kb1Njcm9sbChcImxlZnRcIik7XG4gICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBzZXRUaW1lb3V0KGRvU2Nyb2xsQ2hlY2ssIDEpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICAvLyBhbmQgZXhlY3V0ZSBhbnkgd2FpdGluZyBmdW5jdGlvbnNcbiAgICAgIERPTVJlYWR5KCk7XG4gICAgfSAvLyAvZG9TY3JvbGxDaGVjaygpXG4gICAgLy8gQ2xlYW51cCBmdW5jdGlvbnMgZm9yIHRoZSBkb2N1bWVudCByZWFkeSBtZXRob2RcbiAgaWYgKGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIpIHtcbiAgICBET01Db250ZW50TG9hZGVkID0gZnVuY3Rpb24gKCkge1xuICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIiwgRE9NQ29udGVudExvYWRlZCwgZmFsc2UpO1xuICAgICAgRE9NUmVhZHkoKTtcbiAgICB9O1xuICB9IGVsc2UgaWYgKGRvY3VtZW50LmF0dGFjaEV2ZW50KSB7XG4gICAgRE9NQ29udGVudExvYWRlZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vIE1ha2Ugc3VyZSBib2R5IGV4aXN0cywgYXQgbGVhc3QsIGluIGNhc2UgSUUgZ2V0cyBhIGxpdHRsZSBvdmVyemVhbG91cyAodGlja2V0ICM1NDQzKS5cbiAgICAgIGlmIChkb2N1bWVudC5yZWFkeVN0YXRlID09PSBcImNvbXBsZXRlXCIpIHtcbiAgICAgICAgZG9jdW1lbnQuZGV0YWNoRXZlbnQoXCJvbnJlYWR5c3RhdGVjaGFuZ2VcIiwgRE9NQ29udGVudExvYWRlZCk7XG4gICAgICAgIERPTVJlYWR5KCk7XG4gICAgICB9XG4gICAgfTtcbiAgfSAvLyAvaWYoKVxuICAvLyBFeHBvc2UgJCB0byB0aGUgZ2xvYmFsIG9iamVjdFxuICB3aW5kb3cuJCA9ICQ7XG59KSh3aW5kb3cpO1xuXG4oZnVuY3Rpb24oKSB7XG4gIHZhciBzbGlkZXIgPSB7XG4gICAgbGVmdDogZnVuY3Rpb24oKSB7XG4gICAgICBcbiAgICAgIHZhciBob2xkZXIgPSB0aGlzLnBhcmVudEVsZW1lbnQucXVlcnlTZWxlY3RvcignLmNhcm91c2VsX19ob2xkZXInKTtcbiAgICAgIHZhciBjdXJyZW50TWFyZ2luID0gcGFyc2VJbnQoZ2V0Q29tcHV0ZWRTdHlsZShob2xkZXIpLm1hcmdpbkxlZnQpO1xuICAgICAgdmFyIGN1cnJlbnRXaWR0aCA9IHBhcnNlSW50KGdldENvbXB1dGVkU3R5bGUoaG9sZGVyKS53aWR0aCk7XG4gICAgICB2YXIgcGVyY2VudCA9IE1hdGgucm91bmQoTWF0aC5hYnMoY3VycmVudE1hcmdpbi9jdXJyZW50V2lkdGgqMTApKTtcbiAgICAgIHN3aXRjaChwZXJjZW50KSB7XG4gICAgICAgIGNhc2UgMDpcbiAgICAgICAgICBob2xkZXIuc3R5bGUubWFyZ2luTGVmdCA9ICctMjAwJSc7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIDM6XG4gICAgICAgICAgaG9sZGVyLnN0eWxlLm1hcmdpbkxlZnQgPSAnMCUnO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIDc6XG4gICAgICAgICAgaG9sZGVyLnN0eWxlLm1hcmdpbkxlZnQgPSAnLTEwMCUnO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH0sXG4gICAgcmlnaHQ6IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIGhvbGRlciA9IHRoaXMucGFyZW50RWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuY2Fyb3VzZWxfX2hvbGRlcicpO1xuICAgICAgdmFyIGN1cnJlbnRNYXJnaW4gPSBwYXJzZUludChnZXRDb21wdXRlZFN0eWxlKGhvbGRlcikubWFyZ2luTGVmdCk7XG4gICAgICB2YXIgY3VycmVudFdpZHRoID0gcGFyc2VJbnQoZ2V0Q29tcHV0ZWRTdHlsZShob2xkZXIpLndpZHRoKTtcbiAgICAgIHZhciBwZXJjZW50ID0gTWF0aC5yb3VuZChNYXRoLmFicyhjdXJyZW50TWFyZ2luL2N1cnJlbnRXaWR0aCoxMCkpO1xuICAgICAgc3dpdGNoKHBlcmNlbnQpIHtcbiAgICAgICAgY2FzZSAwOlxuICAgICAgICAgIGhvbGRlci5zdHlsZS5tYXJnaW5MZWZ0ID0gJy0xMDAlJztcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgMzpcbiAgICAgICAgICBob2xkZXIuc3R5bGUubWFyZ2luTGVmdCA9ICctMjAwJSc7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgNzpcbiAgICAgICAgICBob2xkZXIuc3R5bGUubWFyZ2luTGVmdCA9ICcwJztcbiAgICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG4gIH07XG5cbiAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIiwgZnVuY3Rpb24oKXtcblxuICAgIGluaXRTbGlkZXIoKTtcblxuICAgIGZ1bmN0aW9uIGluaXRTbGlkZXIoKXtcbiAgICAgIHZhciBhcnJvd0xlZnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuY2Fyb3VzZWxfX2Fycm93LS1sZWZ0Jyk7XG4gICAgICB2YXIgYXJyb3dSaWdodCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5jYXJvdXNlbF9fYXJyb3ctLXJpZ2h0Jyk7XG4gICAgICBcbiAgICAgIGZvciAodmFyIGk9MDtpPGFycm93TGVmdC5sZW5ndGg7aSsrKXtcbiAgICAgICAgICAgICAgYXJyb3dMZWZ0W2ldLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBzbGlkZXIubGVmdCk7XG4gICAgICB9XG5cbiAgICAgIGZvciAodmFyIGk9MDtpPGFycm93UmlnaHQubGVuZ3RoO2krKyl7XG4gICAgICAgICAgICAgIGFycm93UmlnaHRbaV0uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHNsaWRlci5yaWdodCk7XG4gICAgICB9XG4gICAgfVxuICB9KTtcblxuICAvLyBmdW5jdGlvbiBleHBvcnQob2JqZWN0LCBuYW1lKSB7XG4gIC8vICAgaWYgKHR5cGVvZiBtb2R1bGUgPT09IFwib2JqZWN0XCIgJiYgbW9kdWxlICE9IG51bGwgJiYgdHlwZW9mIG1vZHVsZS5leHBvcnRzID09PSBcIm9iamVjdFwiKVxuICAvLyAgICAgbW9kdWxlLmV4cG9ydHNbbmFtZV0gPSBvYmplY3Q7XG4gIC8vICAgZWxzZVxuICAvLyAgICAgd2luZG93W25hbWVdID0gb2JqZWN0O1xuICAvLyB9O1xuXG59KSgpO1xuXG5mdW5jdGlvbiBnZXRYbWxIdHRwKCl7XG4gIHZhciB4bWxodHRwO1xuICB0cnkge1xuICAgIHhtbGh0dHAgPSBuZXcgQWN0aXZlWE9iamVjdChcIk1zeG1sMi5YTUxIVFRQXCIpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgdHJ5IHtcbiAgICAgIHhtbGh0dHAgPSBuZXcgQWN0aXZlWE9iamVjdChcIk1pY3Jvc29mdC5YTUxIVFRQXCIpO1xuICAgIH0gY2F0Y2ggKEUpIHtcbiAgICAgIHhtbGh0dHAgPSBmYWxzZTtcbiAgICB9XG4gIH1cbiAgaWYgKCF4bWxodHRwICYmIHR5cGVvZiBYTUxIdHRwUmVxdWVzdCE9J3VuZGVmaW5lZCcpIHtcbiAgICB4bWxodHRwID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XG4gIH1cbiAgcmV0dXJuIHhtbGh0dHA7XG59XG5cblxuZnVuY3Rpb24gZ2V0UGljdHVyZXMod29yZCl7XG5cdHZhciB4bWxodHRwID0gZ2V0WG1sSHR0cCgpO1xuXHR2YXIga2V5ID0gJzM1NDU4MjUtYzYwYmM3MWFjMGEyYTcxYWJkM2UzNjkxMyc7XG5cdHZhciB1cmwgPSAnaHR0cHM6Ly9waXhhYmF5LmNvbS9hcGkvP2tleT0nICsga2V5ICsgJyZwZXJfcGFnZT03Jztcblx0Ly92YXIgdXJsID0gJ2h0dHBzOi8vYXBpLnJpZmZzeS5jb20vdjEvc2VhcmNoP2tleT1MSVZEU1JaVUxFTEEmbGltaXQ9Nyc7XG5cdGlmKHdvcmQpe1xuXHRcdHVybCArPSAnJnE9JyArIHdvcmQ7XG5cdH1cblx0Ly8gY29uc29sZS5sb2codXJsKTtcblx0eG1saHR0cC5vcGVuKCdHRVQnLCB1cmwsIHRydWUpO1xuXHR4bWxodHRwLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uKCkge1xuXHQgIFx0aWYgKHhtbGh0dHAucmVhZHlTdGF0ZSA9PSA0KSB7XG5cdCAgICBcdGlmKHhtbGh0dHAuc3RhdHVzID09IDIwMCkge1xuXHQgICAgXHQgICBcdHZhciBwaWN0dXJlcyA9IEpTT04ucGFyc2UoeG1saHR0cC5yZXNwb25zZVRleHQpO1xuXHRcdFx0XHRjb25zb2xlLmxvZyhwaWN0dXJlcyk7XG5cdFx0XHRcdHZhciBncmlkSXRlbXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuZ3JpZF9faXRlbScpO1xuXG5cdFx0XHRcdGZvciggdmFyIGkgPSAwLCBsZW5ndGggPSBncmlkSXRlbXMubGVuZ3RoOyBpIDwgbGVuZ3RoOyBpKyspe1xuXHRcdFx0XHRcdHZhciBzcmMgPSBwaWN0dXJlcy5oaXRzW2ldLndlYmZvcm1hdFVSTDtcblx0XHRcdFx0XHR2YXIgd29yZCA9ICc8cCBjbGFzcz1cImdyaWRfX3RpdGxlXCI+JyArIHBpY3R1cmVzLmhpdHNbaV0udGFncyArICc8L3A+Jztcblx0XHRcdFx0XHR2YXIgaW1nID0gJ3VybChcIicgKyBzcmMgKyAnXCIpJztcblx0XHRcdFx0XHRncmlkSXRlbXNbaV0uaW5uZXJIVE1MID0gd29yZDtcblx0XHRcdFx0XHRncmlkSXRlbXNbaV0uc3R5bGUuYmFja2dyb3VuZEltYWdlID0gaW1nO1xuXHRcdFx0XHRcdC8vIGNvbnNvbGUubG9nKHdvcmQpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdG1hc29ucnkoKTtcblx0ICAgIFx0fVxuXHQgIFx0fVxuXHR9O1xuXHR4bWxodHRwLnNlbmQobnVsbCk7XG59O1xuXG5mdW5jdGlvbiBtYXNvbnJ5KCl7XG5cdHZhciBjb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZ3JpZCcpO1xuXHR2YXIgbXNucnk7XG4gIG1zbnJ5ID0gbmV3IE1hc29ucnkoIGNvbnRhaW5lciwge1xuICBjb2x1bW5XaWR0aDogJy5ncmlkX19zaXplcicsXG4gXHRndXR0ZXI6ICcuZ3JpZF9fZ3V0dGVyJyxcbiAgaXRlbVNlbGVjdG9yOiAnLmdyaWRfX2l0ZW0nLFxuIFx0cGVyY2VudFBvc2l0aW9uOiB0cnVlLFxufSk7XG59XG5cbmZ1bmN0aW9uIHNlYXJjaFBpY3R1cmVzKGV2ZW50KSB7XG5cdHZhciByZXF1ZXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmRpc2NvdmVyX19pbnB1dCcpO1xuXHRnZXRQaWN0dXJlcyhyZXF1ZXN0LnZhbHVlKTtcblx0cmVxdWVzdC52YWx1ZSA9ICcnO1xuXHRldmVudC5wcmV2ZW50RGVmYXVsdCA/IGV2ZW50LnByZXZlbnREZWZhdWx0KCkgOiAoZXZlbnQucmV0dXJuVmFsdWU9ZmFsc2UpO1xufVxuXG5cbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJET01Db250ZW50TG9hZGVkXCIsIGZ1bmN0aW9uKCl7XG5cblx0dmFyIHBpY3R1cmVzID0gZ2V0UGljdHVyZXMoKTtcblxuXG5cdHZhciBkaXNjb3ZlckJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5kaXNjb3Zlcl9fYnV0dG9uJyk7XG5cdGRpc2NvdmVyQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBzZWFyY2hQaWN0dXJlcyk7XG5cblxufSk7Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
